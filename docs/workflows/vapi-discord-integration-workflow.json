{
  "name": "VAPI-Discord Integration Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "vapi-webhook",
        "options": {
          "noResponseBody": false
        }
      },
      "id": "d0e7c30b-1a85-47ea-bf54-0f341acce9d6",
      "name": "VAPI Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -680,
        -140
      ],
      "webhookId": "vapi-discord-integration"
    },
    {
      "parameters": {
        "jsCode": "// Process VAPI webhook data\nconst input = $input.first();\nconst startTime = Date.now();\nconsole.log('VAPI Webhook received:', JSON.stringify(input.json, null, 2));\n\n// Extract call information\nconst callData = input.json.message?.call || input.json.call || {};\nconst transcript = input.json.message?.transcript || input.json.transcript || '';\nconst phoneNumber = callData.phoneNumber || input.json.phoneNumber || 'Unknown';\nconst callId = callData.id || input.json.callId || `vapi-${Date.now()}`;\nconst assistantId = callData.assistantId || input.json.assistantId || 'disc_8127b8b9-d9bc-40f0-ae0c-880dabe6bcd7';\n\n// Create session ID for tracking\nconst sessionId = `vapi-${phoneNumber.replace(/[^0-9]/g, '')}-${callId}`;\n\n// Prepare data for Discordant AI Bot workflow\nconst discordantPayload = {\n  message: transcript,\n  content: transcript,\n  userId: `vapi-${phoneNumber.replace(/[^0-9]/g, '')}`,\n  userName: `VAPI Caller (${phoneNumber})`,\n  channelId: 'vapi',\n  serverId: 'a90f1d41-12a9-4586-b9a4-a513d3bd01d9',\n  platform: 'vapi',\n  isVoiceCall: true,\n  sessionId: sessionId,\n  metadata: {\n    callId: callId,\n    phoneNumber: phoneNumber,\n    assistantId: assistantId,\n    originalEvent: input.json.event || 'vapi_inbound_query',\n    timestamp: new Date().toISOString(),\n    processingStartTime: startTime\n  }\n};\n\nconsole.log('Prepared Discordant payload:', JSON.stringify(discordantPayload, null, 2));\n\nreturn {\n  json: {\n    ...input.json,\n    discordantPayload: discordantPayload,\n    callId: callId,\n    phoneNumber: phoneNumber,\n    transcript: transcript,\n    assistantId: assistantId,\n    sessionId: sessionId,\n    processingStartTime: startTime,\n    processedAt: new Date().toISOString()\n  }\n};"
      },
      "id": "process-vapi-data",
      "name": "Process VAPI Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -460,
        -140
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://n8n.kendev.co/webhook/discordant-ai-services",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "X-Source",
              "value": "vapi-integration"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "",
              "value": "={{ JSON.stringify($json.discordantPayload) }}"
            }
          ]
        },
        "options": {
          "timeout": 30000,
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "call-discordant-ai-workflow",
      "name": "Call Discordant AI Workflow",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -240,
        -140
      ]
    },
    {
      "parameters": {
        "jsCode": "// Process AI response\nconst aiResponse = $('Call Discordant AI Workflow').first();\nconst originalData = $('Process VAPI Data').first();\n\nconsole.log('AI Response received:', JSON.stringify(aiResponse.json, null, 2));\n\n// Extract the response text - check multiple possible fields\nlet responseText = '';\nif (aiResponse.json.content) {\n  responseText = aiResponse.json.content;\n} else if (aiResponse.json.response) {\n  responseText = aiResponse.json.response;\n} else if (aiResponse.json.output) {\n  responseText = aiResponse.json.output;\n} else if (aiResponse.json.message) {\n  responseText = aiResponse.json.message;\n} else if (aiResponse.json.text) {\n  responseText = aiResponse.json.text;\n} else if (aiResponse.json.data?.content) {\n  responseText = aiResponse.json.data.content;\n} else {\n  responseText = 'I understand your request. How can I assist you further?';\n  console.error('Could not extract response from AI workflow:', aiResponse.json);\n}\n\n// Extract metadata from AI response\nconst aiMetadata = aiResponse.json.metadata || {};\nconst toolsUsed = aiMetadata.toolsUsed || aiResponse.json.toolsUsed || [];\nconst messageCount = aiMetadata.messageCount || aiResponse.json.messageCount || 1;\n\n// Format for VAPI voice response\nconst vapiResponse = {\n  callId: originalData.json.callId,\n  response: responseText,\n  channelId: originalData.json.discordantPayload.channelId,\n  serverId: originalData.json.discordantPayload.serverId,\n  workflowId: 'discordant-ai-bot-v3',\n  processingTime: Date.now() - originalData.json.processingStartTime,\n  metadata: {\n    phoneNumber: originalData.json.phoneNumber,\n    assistantId: originalData.json.assistantId,\n    transcript: originalData.json.transcript,\n    aiModel: 'discordant-ai-bot',\n    timestamp: new Date().toISOString(),\n    messageCount: messageCount,\n    toolsUsed: toolsUsed,\n    responseLength: responseText.length,\n    sessionId: originalData.json.sessionId\n  }\n};\n\nreturn {\n  json: vapiResponse\n};"
      },
      "id": "format-vapi-response",
      "name": "Format VAPI Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -20,
        -140
      ]
    },
    {
      "parameters": {
        "dataToSave": {
          "values": [
            {
              "key": "execution_metadata",
              "value": "={{ JSON.stringify({ timestamp: new Date().toISOString(), user_message: $('Process VAPI Data').first().json.transcript, session_id: $('Process VAPI Data').first().json.sessionId, platform: 'vapi', channel_id: 'vapi', call_id: $('Process VAPI Data').first().json.callId, phone_number: $('Process VAPI Data').first().json.phoneNumber, assistant_id: $('Process VAPI Data').first().json.assistantId }) }}"
            },
            {
              "key": "ai_response_data",
              "value": "={{ JSON.stringify({ ai_output: $('Format VAPI Response').first().json.response, tools_used: $('Format VAPI Response').first().json.metadata.toolsUsed || [], processing_time: $('Format VAPI Response').first().json.processingTime, response_length: $('Format VAPI Response').first().json.metadata.responseLength, message_count: $('Format VAPI Response').first().json.metadata.messageCount }) }}"
            },
            {
              "key": "performance_metrics",
              "value": "={{ JSON.stringify({ total_processing_time: $('Format VAPI Response').first().json.processingTime, ai_workflow_time: $('Call Discordant AI Workflow').first().executionTime || 0, workflow_version: 'vapi-discord-v1.0', integration_type: 'discordant-ai-bot', optimization_status: 'active' }) }}"
            },
            {
              "key": "workflow_debug",
              "value": "={{ JSON.stringify({ webhook_data: $('VAPI Webhook Trigger').first().json, processed_data: $('Process VAPI Data').first().json, ai_raw_response: $('Call Discordant AI Workflow').first().json, formatted_response: $('Format VAPI Response').first().json }) }}"
            }
          ]
        }
      },
      "id": "vapi-execution-data",
      "name": "VAPI Execution Data",
      "type": "n8n-nodes-base.executionData",
      "typeVersion": 1,
      "position": [
        200,
        -140
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://discordant.kendev.co/api/voice-ai/vapi/webhook",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "X-Workflow-ID",
              "value": "vapi-discord-integration"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message",
              "value": "={{ $json.discordantPayload }}"
            }
          ]
        },
        "options": {
          "timeout": 15000
        }
      },
      "id": "forward-to-discordant",
      "name": "Create Discord Message",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -240,
        40
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://discordant.kendev.co/api/voice-ai/vapi/proxy",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "X-VAPI-Integration",
              "value": "true"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "",
              "value": "={{ $json }}"
            }
          ]
        },
        "options": {
          "timeout": 15000
        }
      },
      "id": "c4dd6cb6-3921-4e7c-9453-b72fd4b655f0",
      "name": "Send to VAPI Proxy",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        420,
        -140
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Log VAPI interaction with AI response\nINSERT INTO vapi_interactions (\n  id, \n  callId, \n  phoneNumber, \n  transcript, \n  aiResponse, \n  channelId, \n  serverId, \n  processingTime, \n  createdAt\n) VALUES (\n  UUID(),\n  '{{ $('Format VAPI Response').first().json.callId }}',\n  '{{ $('Format VAPI Response').first().json.metadata.phoneNumber }}',\n  '{{ $('Format VAPI Response').first().json.metadata.transcript }}',\n  '{{ $('Format VAPI Response').first().json.response }}',\n  '{{ $('Format VAPI Response').first().json.channelId }}',\n  '{{ $('Format VAPI Response').first().json.serverId }}',\n  {{ $('Format VAPI Response').first().json.processingTime }},\n  NOW()\n) ON DUPLICATE KEY UPDATE\n  aiResponse = VALUES(aiResponse),\n  processingTime = VALUES(processingTime),\n  createdAt = NOW();",
        "options": {}
      },
      "id": "dedbab29-27f7-4272-b5a6-2bbbe312c260",
      "name": "Log VAPI Interaction",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        420,
        40
      ],
      "credentials": {
        "mySql": {
          "id": "TvnUCP0CFWmGulQM",
          "name": "MySQL account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": {
          "success": true,
          "callId": "={{ $('Format VAPI Response').first().json.callId }}",
          "response": "={{ $('Format VAPI Response').first().json.response }}",
          "processingTime": "={{ $('Format VAPI Response').first().json.processingTime }}",
          "discordChannelId": "={{ $('Format VAPI Response').first().json.channelId }}",
          "discordMessageId": "={{ $('Send to VAPI Proxy').first().json.discordMessageId }}",
          "vapiResponseSent": true,
          "metadata": "={{ $('Format VAPI Response').first().json.metadata }}",
          "timestamp": "={{ new Date().toISOString() }}"
        },
        "options": {}
      },
      "id": "d9ef2e7b-3c94-4898-9491-db109731379f",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        640,
        -140
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $statusCode }}",
              "operation": "notEqual",
              "value2": "200"
            }
          ]
        }
      },
      "id": "check-ai-response",
      "name": "Check AI Response",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        200,
        40
      ]
    },
    {
      "parameters": {
        "jsCode": "// Handle error case\nconst error = $input.first();\nconst originalData = $('Process VAPI Data').first();\n\nconsole.error('Error in workflow:', error);\n\n// Log error to execution data\nconst errorData = {\n  error_type: 'workflow_error',\n  error_message: error.json?.message || error.message || 'Unknown error',\n  error_details: error.json || error,\n  failed_at: 'ai_workflow_call',\n  call_id: originalData.json.callId,\n  timestamp: new Date().toISOString()\n};\n\n// Return error response\nreturn {\n  json: {\n    success: false,\n    error: 'Failed to process VAPI request',\n    callId: originalData.json.callId,\n    details: errorData,\n    timestamp: new Date().toISOString()\n  }\n};"
      },
      "id": "handle-error",
      "name": "Handle Error",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        420,
        200
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": {
          "success": false,
          "error": "={{ $json.error }}",
          "callId": "={{ $json.callId }}",
          "details": "={{ $json.details }}",
          "timestamp": "={{ $json.timestamp }}"
        },
        "options": {}
      },
      "id": "error-response",
      "name": "Error Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        640,
        200
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "VAPI Webhook Trigger": {
      "main": [
        [
          {
            "node": "Process VAPI Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process VAPI Data": {
      "main": [
        [
          {
            "node": "Call Discordant AI Workflow",
            "type": "main",
            "index": 0
          },
          {
            "node": "Create Discord Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Discordant AI Workflow": {
      "main": [
        [
          {
            "node": "Format VAPI Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format VAPI Response": {
      "main": [
        [
          {
            "node": "VAPI Execution Data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send to VAPI Proxy",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check AI Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "VAPI Execution Data": {
      "main": [
        []
      ]
    },
    "Send to VAPI Proxy": {
      "main": [
        [
          {
            "node": "Log VAPI Interaction",
            "type": "main",
            "index": 0
          },
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check AI Response": {
      "main": [
        [],
        [
          {
            "node": "Handle Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Handle Error": {
      "main": [
        [
          {
            "node": "Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "81380a40-7e60-401a-bc0f-f8ff2527cabe",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "136461ac021bda65593ed5d2f70798d0433ed7859abfc9e2ca43aa4b9c0b779e"
  },
  "id": "IpV2zeK5T3OFAiUP",
  "tags": [
    {
      "createdAt": "2025-06-09T15:20:49.511Z",
      "updatedAt": "2025-06-09T15:20:49.511Z",
      "id": "WVG87aPfVF1k70I8",
      "name": "VAPI"
    },
    {
      "createdAt": "2025-06-09T15:20:49.521Z",
      "updatedAt": "2025-06-09T15:20:49.521Z",
      "id": "mDhQYU6t9llzt6iv",
      "name": "AI"
    },
    {
      "createdAt": "2025-06-09T15:20:49.565Z",
      "updatedAt": "2025-06-09T15:20:49.565Z",
      "id": "tN8PThS3gEqZUylH",
      "name": "Automation"
    },
    {
      "createdAt": "2025-06-09T15:20:49.565Z",
      "updatedAt": "2025-06-09T15:20:49.565Z",
      "id": "discordant-integration",
      "name": "Discordant Integration"
    }
  ]
} 