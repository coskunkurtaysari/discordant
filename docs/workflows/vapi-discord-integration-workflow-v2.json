{
  "name": "VAPI-Discord Integration Workflow v2",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "vapi-webhook",
        "options": {
          "noResponseBody": false
        }
      },
      "id": "f2017c51-40dc-418a-9826-3a907f8f4050",
      "name": "VAPI Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -620,
        -240
      ],
      "webhookId": "vapi-discord-integration"
    },
    {
      "parameters": {
        "jsCode": "// Process VAPI webhook data\nconst input = $input.first();\nconst startTime = Date.now();\nconsole.log('VAPI Webhook received:', JSON.stringify(input.json, null, 2));\n\n// Extract call information\nconst callData = input.json.message?.call || input.json.call || {};\nconst transcript = input.json.message?.transcript || input.json.transcript || '';\nconst phoneNumber = callData.phoneNumber || input.json.phoneNumber || 'Unknown';\nconst callId = callData.id || input.json.callId || `vapi-${Date.now()}`;\nconst assistantId = callData.assistantId || input.json.assistantId || 'disc_8127b8b9-d9bc-40f0-ae0c-880dabe6bcd7';\n\n// Create session ID for tracking\nconst sessionId = `vapi-${phoneNumber.replace(/[^0-9]/g, '')}-${callId}`;\n\n// Prepare data for Discordant AI Bot workflow\n// Format it to match what the Discordant AI workflow expects\nconst workflowPayload = {\n  body: {\n    message: transcript,\n    content: transcript,\n    userId: `vapi-${phoneNumber.replace(/[^0-9]/g, '')}`,\n    userName: `VAPI Caller (${phoneNumber})`,\n    channelId: 'vapi',\n    serverId: 'a90f1d41-12a9-4586-b9a4-a513d3bd01d9',\n    platform: 'vapi',\n    isVoiceCall: true,\n    sessionId: sessionId,\n    metadata: {\n      callId: callId,\n      phoneNumber: phoneNumber,\n      assistantId: assistantId,\n      originalEvent: input.json.event || 'vapi_inbound_query',\n      timestamp: new Date().toISOString(),\n      processingStartTime: startTime\n    }\n  },\n  headers: {\n    'content-type': 'application/json',\n    'x-source': 'vapi-integration'\n  },\n  query: {}\n};\n\nconsole.log('Prepared workflow payload:', JSON.stringify(workflowPayload, null, 2));\n\nreturn {\n  json: {\n    ...input.json,\n    workflowPayload: workflowPayload,\n    callId: callId,\n    phoneNumber: phoneNumber,\n    transcript: transcript,\n    assistantId: assistantId,\n    sessionId: sessionId,\n    processingStartTime: startTime,\n    processedAt: new Date().toISOString()\n  }\n};"
      },
      "id": "49546b43-57a6-447e-9f61-770b5f88cbc3",
      "name": "Process VAPI Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -400,
        -240
      ]
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "682X4GL9tCMoEiF5",
          "mode": "list",
          "cachedResultName": "discordant-ai-services"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "body": "={{ $json.workflowPayload.body }}",
            "headers": "={{ $json.workflowPayload.headers }}",
            "query": "={{ $json.workflowPayload.query }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": 0,
              "displayName": "body",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "readOnly": false,
              "removed": false
            },
            {
              "id": 1,
              "displayName": "headers",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "readOnly": false,
              "removed": false
            },
            {
              "id": 2,
              "displayName": "query",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": true,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -160,
        -240
      ],
      "id": "c95c9932-da4b-4c18-8503-c3d5e8018d23",
      "name": "Call Discordant AI Workflow"
    },
    {
      "parameters": {
        "jsCode": "// Process AI response\nconst aiResponse = $('Call Discordant AI Workflow').first();\nconst originalData = $('Process VAPI Data').first();\n\nconsole.log('AI Response received:', JSON.stringify(aiResponse.json, null, 2));\n\n// Extract the response text - check multiple possible fields\nlet responseText = '';\nif (aiResponse.json.content) {\n  responseText = aiResponse.json.content;\n} else if (aiResponse.json.response) {\n  responseText = aiResponse.json.response;\n} else if (aiResponse.json.output) {\n  responseText = aiResponse.json.output;\n} else if (aiResponse.json.message) {\n  responseText = aiResponse.json.message;\n} else if (aiResponse.json.text) {\n  responseText = aiResponse.json.text;\n} else if (aiResponse.json.data?.content) {\n  responseText = aiResponse.json.data.content;\n} else {\n  responseText = 'I understand your request. How can I assist you further?';\n  console.error('Could not extract response from AI workflow:', aiResponse.json);\n}\n\n// Extract metadata from AI response\nconst aiMetadata = aiResponse.json.metadata || {};\nconst toolsUsed = aiMetadata.toolsUsed || aiResponse.json.toolsUsed || [];\nconst messageCount = aiMetadata.messageCount || aiResponse.json.messageCount || 1;\n\n// Format for VAPI voice response\nconst vapiResponse = {\n  callId: originalData.json.callId,\n  response: responseText,\n  channelId: originalData.json.workflowPayload.body.channelId,\n  serverId: originalData.json.workflowPayload.body.serverId,\n  workflowId: 'discordant-ai-bot-v3',\n  processingTime: Date.now() - originalData.json.processingStartTime,\n  metadata: {\n    phoneNumber: originalData.json.phoneNumber,\n    assistantId: originalData.json.assistantId,\n    transcript: originalData.json.transcript,\n    aiModel: 'discordant-ai-bot',\n    timestamp: new Date().toISOString(),\n    messageCount: messageCount,\n    toolsUsed: toolsUsed,\n    responseLength: responseText.length,\n    sessionId: originalData.json.sessionId\n  }\n};\n\nreturn {\n  json: vapiResponse\n};"
      },
      "id": "2a8a4690-eccd-443d-a830-8bcc72768fba",
      "name": "Format VAPI Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        80,
        -240
      ]
    },
    {
      "parameters": {
        "dataToSave": {
          "values": [
            {
              "key": "execution_metadata",
              "value": "={{ JSON.stringify({ timestamp: new Date().toISOString(), user_message: $('Process VAPI Data').first().json.transcript, session_id: $('Process VAPI Data').first().json.sessionId, platform: 'vapi', channel_id: 'vapi', call_id: $('Process VAPI Data').first().json.callId, phone_number: $('Process VAPI Data').first().json.phoneNumber, assistant_id: $('Process VAPI Data').first().json.assistantId }) }}"
            },
            {
              "key": "ai_response_data",
              "value": "={{ JSON.stringify({ ai_output: $('Format VAPI Response').first().json.response, tools_used: $('Format VAPI Response').first().json.metadata.toolsUsed || [], processing_time: $('Format VAPI Response').first().json.processingTime, response_length: $('Format VAPI Response').first().json.metadata.responseLength, message_count: $('Format VAPI Response').first().json.metadata.messageCount }) }}"
            },
            {
              "key": "performance_metrics",
              "value": "={{ JSON.stringify({ total_processing_time: $('Format VAPI Response').first().json.processingTime, sub_workflow_time: $('Call Discordant AI Workflow').first().executionTime || 0, workflow_version: 'vapi-discord-v2.0', integration_type: 'execute-workflow', optimization_status: 'active' }) }}"
            },
            {
              "key": "workflow_debug",
              "value": "={{ JSON.stringify({ webhook_data: $('VAPI Webhook Trigger').first().json, processed_data: $('Process VAPI Data').first().json, ai_raw_response: $('Call Discordant AI Workflow').first().json, formatted_response: $('Format VAPI Response').first().json }) }}"
            }
          ]
        }
      },
      "id": "69629386-fcef-484e-b130-6af853580a55",
      "name": "VAPI Execution Data",
      "type": "n8n-nodes-base.executionData",
      "typeVersion": 1,
      "position": [
        320,
        -240
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": {
          "success": true,
          "callId": "={{ $('Format VAPI Response').first().json.callId }}",
          "response": "={{ $('Format VAPI Response').first().json.response }}",
          "processingTime": "={{ $('Format VAPI Response').first().json.processingTime }}",
          "discordChannelId": "={{ $('Format VAPI Response').first().json.channelId }}",
          "metadata": "={{ $('Format VAPI Response').first().json.metadata }}",
          "timestamp": "={{ new Date().toISOString() }}"
        },
        "options": {}
      },
      "id": "9dc87a58-fd5d-4dc3-872b-3b121b506ae6",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        560,
        -240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $statusCode }}",
              "operation": "notEqual",
              "value2": 200
            }
          ]
        }
      },
      "id": "887358a1-88c8-4464-8afe-a7fac33cf677",
      "name": "Check Workflow Error",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        80,
        -60
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": {
          "success": false,
          "error": "Failed to process VAPI request",
          "callId": "={{ $('Process VAPI Data').first().json.callId }}",
          "details": {
            "error": "={{ $json.error || 'Sub-workflow execution failed' }}",
            "statusCode": "={{ $statusCode }}"
          },
          "timestamp": "={{ new Date().toISOString() }}"
        },
        "options": {}
      },
      "id": "e3b6811e-f006-4e35-b0c0-27b2e1143974",
      "name": "Error Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        320,
        40
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "VAPI Webhook Trigger": {
      "main": [
        [
          {
            "node": "Process VAPI Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process VAPI Data": {
      "main": [
        [
          {
            "node": "Call Discordant AI Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Discordant AI Workflow": {
      "main": [
        [
          {
            "node": "Format VAPI Response",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check Workflow Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format VAPI Response": {
      "main": [
        [
          {
            "node": "VAPI Execution Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "VAPI Execution Data": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Workflow Error": {
      "main": [
        [
          {
            "node": "Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "591066ba-703d-4063-80b1-0431d9abe652",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "136461ac021bda65593ed5d2f70798d0433ed7859abfc9e2ca43aa4b9c0b779e"
  },
  "id": "IpV2zeK5T3OFAiUP",
  "tags": [
    {
      "createdAt": "2025-06-09T15:20:49.511Z",
      "updatedAt": "2025-06-09T15:20:49.511Z",
      "id": "WVG87aPfVF1k70I8",
      "name": "VAPI"
    },
    {
      "createdAt": "2025-06-09T15:20:49.521Z",
      "updatedAt": "2025-06-09T15:20:49.521Z",
      "id": "mDhQYU6t9llzt6iv",
      "name": "AI"
    },
    {
      "createdAt": "2025-06-09T15:20:49.565Z",
      "updatedAt": "2025-06-09T15:20:49.565Z",
      "id": "tN8PThS3gEqZUylH",
      "name": "Automation"
    }
  ]
}