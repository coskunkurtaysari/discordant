{
  "parameters": {
    "name": "gsa_client_research",
    "description": "Research company information for GSA Schedule qualification and value proposition development. Uses native n8n sub-workflow execution for optimal performance and reliability.",
    "schema": {
      "type": "object",
      "properties": {
        "company": {
          "type": "string",
          "description": "Company name or website URL to research"
        },
        "focus": {
          "type": "string",
          "description": "Research focus: 'qualification' for basic qualifying info, 'decision_makers' for executive contacts, 'value_prop' for business benefits analysis",
          "enum": ["qualification", "decision_makers", "value_prop", "complete"],
          "default": "complete"
        }
      },
      "required": ["company"]
    },
    "codeType": "runOnceForAllItems",
    "jsCode": "// GSA Client Research Tool - Execute Workflow Integration\n// This prepares data for the Execute Workflow node\n\nconst startTime = Date.now();\n\ntry {\n  const company = $input.item.json.company || '';\n  const focus = $input.item.json.focus || 'complete';\n  \n  console.log(`[GSA_PREP] Preparing GSA research for: ${company}`);\n  console.log(`[GSA_PREP] Research focus: ${focus}`);\n  \n  // Validate inputs\n  if (!company || company.trim() === '') {\n    throw new Error('Company name or URL is required');\n  }\n  \n  const validFocusTypes = ['qualification', 'decision_makers', 'value_prop', 'complete'];\n  const validatedFocus = validFocusTypes.includes(focus) ? focus : 'complete';\n  \n  // Prepare data for Execute Workflow node\n  const workflowInput = {\n    company: company.trim(),\n    focus: validatedFocus,\n    requestId: require('crypto').randomBytes(8).toString('hex'),\n    timestamp: new Date().toISOString(),\n    source: 'ai-agent-tool'\n  };\n  \n  console.log(`[GSA_PREP] Workflow input prepared:`, workflowInput);\n  console.log(`[GSA_PREP] Preparation time: ${Date.now() - startTime}ms`);\n  \n  return workflowInput;\n  \n} catch (error) {\n  console.error(`[GSA_PREP] Error:`, error.message);\n  \n  // Return error structure for handling\n  return {\n    error: true,\n    errorMessage: error.message,\n    company: $input.item.json.company || 'Unknown',\n    focus: $input.item.json.focus || 'complete',\n    timestamp: new Date().toISOString()\n  };\n}"
  },
  "id": "gsa-research-prep",
  "name": "GSA Research Prep",
  "type": "@n8n/n8n-nodes-langchain.toolCode",
  "typeVersion": 1.1,
  "position": [1760, 260]
} 