{
  "name": "GSA Research Sub-Workflow v1.0",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "gsa-research",
        "responseMode": "responseNode",
        "options": {
          "allowedOrigins": "*"
        }
      },
      "id": "input-webhook",
      "name": "GSA Research Input",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [100, 200],
      "webhookId": "gsa-research-input"
    },
    {
      "parameters": {
        "jsCode": "// Input Processing Node - Parse and validate company data\nconst startTime = Date.now();\nconsole.log('[GSA_INPUT] Starting input processing');\n\ntry {\n  const input = $input.first().json;\n  console.log('[GSA_INPUT] Raw input:', JSON.stringify(input, null, 2));\n  \n  // Extract parameters from different possible locations\n  let company = '';\n  let focus = 'complete';\n  \n  if (input.body) {\n    company = input.body.company || input.body.companyName || '';\n    focus = input.body.focus || 'complete';\n  } else {\n    company = input.company || input.companyName || '';\n    focus = input.focus || 'complete';\n  }\n  \n  // Validate inputs\n  if (!company || company.trim() === '') {\n    throw new Error('Company name or URL is required');\n  }\n  \n  const validFocusTypes = ['qualification', 'decision_makers', 'value_prop', 'complete'];\n  if (!validFocusTypes.includes(focus)) {\n    focus = 'complete';\n  }\n  \n  const result = {\n    company: company.trim(),\n    focus: focus,\n    timestamp: new Date().toISOString(),\n    processingTime: Date.now() - startTime\n  };\n  \n  console.log('[GSA_INPUT] Processed input:', result);\n  return result;\n  \n} catch (error) {\n  console.error('[GSA_INPUT] Error:', error.message);\n  return {\n    error: true,\n    errorMessage: error.message,\n    company: '',\n    focus: 'complete',\n    timestamp: new Date().toISOString()\n  };\n}"
      },
      "id": "input-processor",
      "name": "1. Input Processor",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [300, 200]
    },
    {
      "parameters": {
        "jsCode": "// Company Extraction Node - Extract company name and website\nconst startTime = Date.now();\nconsole.log('[GSA_EXTRACT] Starting company extraction');\n\ntry {\n  const input = $input.first().json;\n  \n  if (input.error) {\n    return input;\n  }\n  \n  let companyName = input.company;\n  let websiteUrl = '';\n  \n  console.log('[GSA_EXTRACT] Processing company:', companyName);\n  \n  // Handle URL input\n  if (companyName.includes('http') || companyName.includes('www.') || companyName.includes('.com')) {\n    try {\n      // Clean and parse URL\n      if (!companyName.startsWith('http')) {\n        websiteUrl = companyName.startsWith('www.') ? `https://${companyName}` : `https://www.${companyName}`;\n      } else {\n        websiteUrl = companyName;\n      }\n      \n      const url = new URL(websiteUrl);\n      companyName = url.hostname.replace('www.', '').split('.')[0];\n      companyName = companyName.charAt(0).toUpperCase() + companyName.slice(1);\n      \n      console.log('[GSA_EXTRACT] Extracted from URL - Company:', companyName, 'Website:', websiteUrl);\n    } catch (e) {\n      console.log('[GSA_EXTRACT] URL parsing failed, treating as company name');\n      companyName = companyName.replace(/[^a-zA-Z0-9\\s]/g, '').trim();\n      websiteUrl = `https://www.${companyName.toLowerCase()}.com`;\n    }\n  } else {\n    // Handle company name input\n    websiteUrl = `https://www.${companyName.toLowerCase().replace(/\\s+/g, '')}.com`;\n  }\n  \n  const result = {\n    ...input,\n    extractedCompanyName: companyName,\n    extractedWebsiteUrl: websiteUrl,\n    extractionTime: Date.now() - startTime\n  };\n  \n  console.log('[GSA_EXTRACT] Extraction complete:', result);\n  return result;\n  \n} catch (error) {\n  console.error('[GSA_EXTRACT] Error:', error.message);\n  return {\n    ...input,\n    error: true,\n    errorMessage: error.message,\n    extractedCompanyName: input.company || 'Unknown',\n    extractedWebsiteUrl: ''\n  };\n}"
      },
      "id": "company-extractor",
      "name": "2. Company Extractor",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [500, 200]
    },
    {
      "parameters": {
        "jsCode": "// Industry Analysis Node - Analyze company industry and business type\nconst startTime = Date.now();\nconsole.log('[GSA_INDUSTRY] Starting industry analysis');\n\ntry {\n  const input = $input.first().json;\n  \n  if (input.error) {\n    return input;\n  }\n  \n  const companyName = input.extractedCompanyName.toLowerCase();\n  const websiteUrl = input.extractedWebsiteUrl.toLowerCase();\n  \n  console.log('[GSA_INDUSTRY] Analyzing:', companyName);\n  \n  // Industry pattern matching function\n  function analyzeIndustry(name, url) {\n    // Aluminum/Metal Manufacturing\n    if (name.includes('aluminum') || name.includes('metal') || name.includes('steel') || name.includes('alloy')) {\n      return {\n        industry: 'Aluminum Manufacturing & Construction Products',\n        naicsCode: '331318',\n        businessSize: 'Established manufacturer',\n        businessType: 'Manufacturing with design/fabrication services',\n        markets: ['Commercial construction', 'Residential', 'Industrial'],\n        category: 'manufacturing'\n      };\n    }\n    \n    // Technology/Software\n    if (name.includes('tech') || name.includes('software') || name.includes('IT') || name.includes('digital') || name.includes('cyber')) {\n      return {\n        industry: 'Information Technology Services',\n        naicsCode: '541511',\n        businessSize: 'Professional services firm',\n        businessType: 'Technology consulting and services',\n        markets: ['Enterprise clients', 'Government', 'Commercial'],\n        category: 'technology'\n      };\n    }\n    \n    // Consulting/Professional Services\n    if (name.includes('consult') || name.includes('advisor') || name.includes('solution') || name.includes('strategic')) {\n      return {\n        industry: 'Professional Consulting Services',\n        naicsCode: '541611',\n        businessSize: 'Professional services firm',\n        businessType: 'Consulting and advisory services',\n        markets: ['Corporate clients', 'Government agencies', 'Non-profits'],\n        category: 'consulting'\n      };\n    }\n    \n    // Construction/Engineering\n    if (name.includes('construct') || name.includes('build') || name.includes('contractor') || name.includes('engineer')) {\n      return {\n        industry: 'Construction and Engineering Services',\n        naicsCode: '236220',\n        businessSize: 'Construction contractor',\n        businessType: 'Commercial and residential construction',\n        markets: ['Commercial development', 'Government projects', 'Residential'],\n        category: 'construction'\n      };\n    }\n    \n    // Healthcare/Medical\n    if (name.includes('health') || name.includes('medical') || name.includes('clinic') || name.includes('hospital')) {\n      return {\n        industry: 'Healthcare and Medical Services',\n        naicsCode: '621111',\n        businessSize: 'Healthcare provider',\n        businessType: 'Medical services and healthcare',\n        markets: ['Healthcare systems', 'Government health', 'Private practice'],\n        category: 'healthcare'\n      };\n    }\n    \n    // Default for unknown industries\n    return {\n      industry: 'Professional Services',\n      naicsCode: '541990',\n      businessSize: 'Professional services firm',\n      businessType: 'Specialized business services',\n      markets: ['Commercial clients', 'Government', 'Private sector'],\n      category: 'general'\n    };\n  }\n  \n  const industryAnalysis = analyzeIndustry(companyName, websiteUrl);\n  \n  const result = {\n    ...input,\n    industryAnalysis: industryAnalysis,\n    analysisTime: Date.now() - startTime\n  };\n  \n  console.log('[GSA_INDUSTRY] Analysis complete:', industryAnalysis.industry);\n  return result;\n  \n} catch (error) {\n  console.error('[GSA_INDUSTRY] Error:', error.message);\n  return {\n    ...input,\n    error: true,\n    errorMessage: error.message,\n    industryAnalysis: {\n      industry: 'Unknown Industry',\n      category: 'unknown'\n    }\n  };\n}"
      },
      "id": "industry-analyzer",
      "name": "3. Industry Analyzer",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [700, 200]
    },
    {
      "parameters": {
        "jsCode": "// GSA Schedule Matching Node - Match industry to appropriate GSA Schedules\nconst startTime = Date.now();\nconsole.log('[GSA_SCHEDULE] Starting GSA schedule matching');\n\ntry {\n  const input = $input.first().json;\n  \n  if (input.error) {\n    return input;\n  }\n  \n  const industry = input.industryAnalysis;\n  console.log('[GSA_SCHEDULE] Matching schedules for:', industry.category);\n  \n  // GSA Schedule matching function\n  function matchGSASchedules(industryData) {\n    const category = industryData.category;\n    \n    switch (category) {\n      case 'manufacturing':\n        return {\n          primaryMatch: 'GSA Schedule 56 - Buildings & Building Materials',\n          schedules: [\n            { name: 'GSA Schedule 56', description: 'Buildings & Building Materials', priority: 'Primary' },\n            { name: 'GSA Schedule 03FAC', description: 'Facilities Maintenance and Management', priority: 'Secondary' },\n            { name: 'Special Item Numbers', description: 'Architectural metalwork, railings, fencing', priority: 'Tertiary' }\n          ],\n          competitiveAdvantage: 'Direct access to federal building renovation projects'\n        };\n        \n      case 'technology':\n        return {\n          primaryMatch: 'GSA Schedule 70 - Information Technology',\n          schedules: [\n            { name: 'GSA Schedule 70', description: 'Information Technology', priority: 'Primary' },\n            { name: 'GSA OASIS', description: 'Professional Services', priority: 'Secondary' },\n            { name: 'CIO-SP3', description: 'IT Services for Federal Agencies', priority: 'Tertiary' }\n          ],\n          competitiveAdvantage: 'Access to $50B+ federal IT marketplace'\n        };\n        \n      case 'consulting':\n        return {\n          primaryMatch: 'GSA OASIS - Professional Services',\n          schedules: [\n            { name: 'GSA OASIS', description: 'Professional Services', priority: 'Primary' },\n            { name: 'GSA Schedule 541', description: 'Professional and Allied Services', priority: 'Secondary' },\n            { name: 'GSA Schedule 874', description: 'Mission Oriented Business Integrated Services', priority: 'Tertiary' }\n          ],\n          competitiveAdvantage: 'Exclusive access to high-value consulting contracts'\n        };\n        \n      case 'construction':\n        return {\n          primaryMatch: 'GSA Schedule 03FAC - Facilities Services',\n          schedules: [\n            { name: 'GSA Schedule 03FAC', description: 'Facilities Maintenance and Management', priority: 'Primary' },\n            { name: 'GSA Schedule 56', description: 'Buildings & Building Materials', priority: 'Secondary' },\n            { name: 'GSA MOBIS', description: 'Mission Oriented Business Integrated Services', priority: 'Tertiary' }\n          ],\n          competitiveAdvantage: 'Direct access to federal facility construction projects'\n        };\n        \n      case 'healthcare':\n        return {\n          primaryMatch: 'GSA Schedule 621 - Professional Services',\n          schedules: [\n            { name: 'GSA Schedule 621', description: 'Professional and Allied Healthcare Services', priority: 'Primary' },\n            { name: 'GSA OASIS', description: 'Professional Services', priority: 'Secondary' },\n            { name: 'VA Schedules', description: 'Veterans Affairs Healthcare Contracts', priority: 'Tertiary' }\n          ],\n          competitiveAdvantage: 'Access to federal healthcare and VA contracts'\n        };\n        \n      default:\n        return {\n          primaryMatch: 'GSA Schedule 541 - Professional Services',\n          schedules: [\n            { name: 'GSA Schedule 541', description: 'Professional and Allied Services', priority: 'Primary' },\n            { name: 'GSA OASIS', description: 'Professional Services', priority: 'Secondary' }\n          ],\n          competitiveAdvantage: 'Access to diverse federal service opportunities'\n        };\n    }\n  }\n  \n  const gsaScheduleMatch = matchGSASchedules(industry);\n  \n  const result = {\n    ...input,\n    gsaScheduleMatch: gsaScheduleMatch,\n    scheduleMatchTime: Date.now() - startTime\n  };\n  \n  console.log('[GSA_SCHEDULE] Matched primary schedule:', gsaScheduleMatch.primaryMatch);\n  return result;\n  \n} catch (error) {\n  console.error('[GSA_SCHEDULE] Error:', error.message);\n  return {\n    ...input,\n    error: true,\n    errorMessage: error.message,\n    gsaScheduleMatch: {\n      primaryMatch: 'GSA Schedule 541 - Professional Services',\n      schedules: []\n    }\n  };\n}"
      },
      "id": "gsa-scheduler",
      "name": "4. GSA Schedule Matcher",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 200]
    },
    {
      "parameters": {
        "jsCode": "// Contact Generation Node - Generate realistic decision maker contacts\nconst startTime = Date.now();\nconsole.log('[GSA_CONTACTS] Starting contact generation');\n\ntry {\n  const input = $input.first().json;\n  \n  if (input.error) {\n    return input;\n  }\n  \n  const companyName = input.extractedCompanyName;\n  const websiteUrl = input.extractedWebsiteUrl;\n  const industry = input.industryAnalysis;\n  \n  console.log('[GSA_CONTACTS] Generating contacts for:', companyName);\n  \n  // Contact generation function\n  function generateContacts(company, website, industryData) {\n    const domain = website.replace('https://www.', '').replace('https://', '').split('/')[0];\n    const category = industryData.category;\n    \n    // Base contacts for all companies\n    const contacts = [\n      {\n        name: 'CEO/President',\n        title: 'Chief Executive Officer',\n        email: `info@${domain}`,\n        phone: '(Contact via website)',\n        authority: 'Final decision maker',\n        notes: 'Owner/founder - ultimate authority for strategic decisions',\n        priority: 'High'\n      },\n      {\n        name: 'Business Development Manager',\n        title: 'VP Business Development',\n        email: `sales@${domain}`,\n        phone: '(Contact via website)',\n        authority: 'Influences purchasing and partnerships',\n        notes: 'Handles new revenue opportunities and strategic partnerships',\n        priority: 'High'\n      }\n    ];\n    \n    // Add industry-specific contacts\n    if (category === 'technology') {\n      contacts.push({\n        name: 'Chief Technology Officer',\n        title: 'CTO',\n        email: `cto@${domain}`,\n        phone: '(Contact via website)',\n        authority: 'Technical decision maker',\n        notes: 'Oversees technology strategy and government compliance',\n        priority: 'Medium'\n      });\n    } else if (category === 'manufacturing') {\n      contacts.push({\n        name: 'Operations Manager',\n        title: 'VP Operations',\n        email: `operations@${domain}`,\n        phone: '(Contact via website)',\n        authority: 'Production and capacity decisions',\n        notes: 'Manages manufacturing capacity and government contracts',\n        priority: 'Medium'\n      });\n    } else if (category === 'consulting') {\n      contacts.push({\n        name: 'Principal Consultant',\n        title: 'Managing Partner',\n        email: `partners@${domain}`,\n        phone: '(Contact via website)',\n        authority: 'Practice area decisions',\n        notes: 'Leads major client engagements and business development',\n        priority: 'High'\n      });\n    }\n    \n    return contacts;\n  }\n  \n  const decisionMakers = generateContacts(companyName, websiteUrl, industry);\n  \n  const result = {\n    ...input,\n    decisionMakers: decisionMakers,\n    contactGenerationTime: Date.now() - startTime\n  };\n  \n  console.log('[GSA_CONTACTS] Generated', decisionMakers.length, 'contacts');\n  return result;\n  \n} catch (error) {\n  console.error('[GSA_CONTACTS] Error:', error.message);\n  return {\n    ...input,\n    error: true,\n    errorMessage: error.message,\n    decisionMakers: []\n  };\n}"
      },
      "id": "contact-generator",
      "name": "5. Contact Generator",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1100, 200]
    },
    {
      "parameters": {
        "jsCode": "// Value Proposition Node - Generate industry-specific value propositions\nconst startTime = Date.now();\nconsole.log('[GSA_VALUE] Starting value proposition generation');\n\ntry {\n  const input = $input.first().json;\n  \n  if (input.error) {\n    return input;\n  }\n  \n  const companyName = input.extractedCompanyName;\n  const industry = input.industryAnalysis;\n  \n  console.log('[GSA_VALUE] Generating value prop for:', industry.category);\n  \n  // Value proposition generation function\n  function generateValueProp(industryData, company) {\n    const category = industryData.category;\n    \n    switch (category) {\n      case 'manufacturing':\n        return {\n          challenges: [\n            'Limited access to federal construction projects',\n            'Competing with large contractors for government work',\n            'Need for predictable revenue in cyclical construction market',\n            'Difficulty reaching federal facility managers directly'\n          ],\n          benefits: [\n            'Direct access to federal facility renovation projects',\n            'GSA Schedule eliminates competitive bidding for many purchases',\n            'Federal buildings constantly need aluminum railings, fencing, architectural elements',\n            'Opportunity to supply military installations and government facilities',\n            'State and local governments can also use GSA pricing'\n          ],\n          opportunities: [\n            `${company} products needed for federal building renovations`,\n            'Growing federal infrastructure spending',\n            'Military base facility improvements',\n            'Government office building modernization projects'\n          ],\n          questions: [\n            'Have you ever bid on federal construction projects?',\n            'Do you currently work with government contractors?',\n            'What percentage of your work is commercial vs. residential?',\n            'Are you interested in expanding into government markets?'\n          ],\n          closingPoints: [\n            'Federal facilities need your aluminum products for ongoing renovations',\n            'GSA Schedule provides 5-year pricing agreements for revenue predictability',\n            'Direct access to federal buyers without going through general contractors',\n            'Our specialists handle the entire GSA application process'\n          ]\n        };\n        \n      case 'technology':\n        return {\n          challenges: [\n            'Competitive commercial IT marketplace',\n            'Difficulty accessing federal IT procurement opportunities',\n            'Complex government compliance requirements',\n            'Long sales cycles with uncertain outcomes'\n          ],\n          benefits: [\n            'Access to $50+ billion federal IT marketplace',\n            'Pre-approved vendor status eliminates RFP requirements',\n            'Federal agencies prioritize cybersecurity and modernization',\n            '5-year contract duration provides revenue predictability',\n            'Small business set-aside opportunities'\n          ],\n          opportunities: [\n            'Federal IT modernization initiatives',\n            'Cybersecurity upgrades across all agencies',\n            'Cloud migration projects',\n            'Digital transformation requirements'\n          ],\n          questions: [\n            'Are you currently pursuing any government IT contracts?',\n            'What cybersecurity solutions do you specialize in?',\n            'Have you worked with FedRAMP compliance before?',\n            'What percentage of your revenue comes from federal clients?'\n          ],\n          closingPoints: [\n            'Federal agencies need your IT expertise for critical modernization',\n            'GSA Schedule 70 provides exclusive access to federal buyers',\n            'Typical ROI is 300-500% over the 5-year contract period',\n            'Perfect timing with new fiscal year IT budget allocations'\n          ]\n        };\n        \n      case 'consulting':\n        return {\n          challenges: [\n            'Saturated commercial consulting market',\n            'Unpredictable project-based revenue',\n            'Difficulty reaching federal decision makers',\n            'Complex government procurement processes'\n          ],\n          benefits: [\n            'Access to high-value federal consulting opportunities',\n            'OASIS contracts worth billions in professional services',\n            'Long-term engagements with stable government clients',\n            'Higher margins on specialized government work',\n            'Opportunity to work on mission-critical federal initiatives'\n          ],\n          opportunities: [\n            'Federal digital transformation consulting',\n            'Organizational change management projects',\n            'Strategic planning and policy development',\n            'Performance improvement initiatives'\n          ],\n          questions: [\n            'What types of consulting services do you specialize in?',\n            'Have you worked with government agencies before?',\n            'Are you interested in federal transformation projects?',\n            'What are your biggest challenges in growing consulting revenue?'\n          ],\n          closingPoints: [\n            'Federal agencies need your consulting expertise for critical initiatives',\n            'OASIS provides access to billion-dollar service opportunities',\n            'Government consulting offers higher margins and longer engagements',\n            'Our specialists guide you through the entire qualification process'\n          ]\n        };\n        \n      default:\n        return {\n          challenges: [\n            'Limited access to federal contracting opportunities',\n            'Competing in crowded commercial marketplace',\n            'Need for predictable revenue streams',\n            'Difficulty reaching government decision makers'\n          ],\n          benefits: [\n            'Access to $50+ billion federal marketplace',\n            '5-year contract duration with no re-bidding',\n            'Pre-negotiated pricing eliminates bidding wars',\n            'Marketing support through GSA Advantage platform'\n          ],\n          opportunities: [\n            `Federal agencies need ${industryData.industry.toLowerCase()} services`,\n            'Growing government outsourcing of professional services',\n            'Small business set-aside opportunities',\n            'State and local market expansion using GSA pricing'\n          ],\n          questions: [\n            'Are you currently pursuing any government contracts?',\n            'What percentage of your revenue comes from federal clients?',\n            'Have you considered the federal marketplace for expansion?',\n            'What are your biggest challenges in growing revenue?'\n          ],\n          closingPoints: [\n            'GSA Schedule provides exclusive access to federal buyers',\n            'Our specialists handle the entire application process',\n            'Typical ROI is 300-500% over the 5-year contract period',\n            'Perfect timing with new fiscal year government planning'\n          ]\n        };\n    }\n  }\n  \n  const valueProposition = generateValueProp(industry, companyName);\n  \n  const result = {\n    ...input,\n    valueProposition: valueProposition,\n    valuePropTime: Date.now() - startTime\n  };\n  \n  console.log('[GSA_VALUE] Value proposition generated for', industry.category);\n  return result;\n  \n} catch (error) {\n  console.error('[GSA_VALUE] Error:', error.message);\n  return {\n    ...input,\n    error: true,\n    errorMessage: error.message,\n    valueProposition: {\n      challenges: [],\n      benefits: [],\n      opportunities: [],\n      questions: [],\n      closingPoints: []\n    }\n  };\n}"
      },
      "id": "value-generator",
      "name": "6. Value Proposition Generator",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1300, 200]
    },
    {
      "parameters": {
        "jsCode": "// Response Formatting Node - Format final response based on focus area\nconst startTime = Date.now();\nconsole.log('[GSA_FORMAT] Starting response formatting');\n\ntry {\n  const input = $input.first().json;\n  \n  if (input.error) {\n    const currentTime = new Date().toLocaleTimeString('en-US', { timeZone: 'America/New_York' });\n    return {\n      response: `⚠️ **GSA Research Error**\\n\\nError analyzing \"${input.company}\": ${input.errorMessage}\\n\\n**Time**: ${currentTime}\\n\\n**Next Steps**: Try with company website URL or contact for manual research`,\n      error: true,\n      timestamp: new Date().toISOString()\n    };\n  }\n  \n  const companyName = input.extractedCompanyName;\n  const website = input.extractedWebsiteUrl;\n  const industry = input.industryAnalysis;\n  const gsaSchedules = input.gsaScheduleMatch;\n  const contacts = input.decisionMakers;\n  const valueProp = input.valueProposition;\n  const focus = input.focus;\n  \n  console.log('[GSA_FORMAT] Formatting response for focus:', focus);\n  \n  let response = '';\n  \n  // Business Profile Section (always included)\n  if (focus === 'qualification' || focus === 'complete') {\n    response += `🏢 **${companyName} - GSA Qualification Assessment**\\n\\n`;\n    response += `📊 **Business Profile:**\\n`;\n    response += `• Industry: ${industry.industry}\\n`;\n    response += `• NAICS Code: ${industry.naicsCode}\\n`;\n    response += `• Business Type: ${industry.businessType}\\n`;\n    response += `• Estimated Size: ${industry.businessSize}\\n`;\n    response += `• Website: ${website}\\n\\n`;\n    \n    response += `🎯 **GSA Schedule Opportunities:**\\n`;\n    gsaSchedules.schedules.forEach(schedule => {\n      response += `• **${schedule.name}** - ${schedule.description} (${schedule.priority})\\n`;\n    });\n    response += `\\n**Primary Match**: ${gsaSchedules.primaryMatch}\\n`;\n    response += `**Competitive Advantage**: ${gsaSchedules.competitiveAdvantage}\\n\\n`;\n  }\n  \n  // Decision Makers Section\n  if (focus === 'decision_makers' || focus === 'complete') {\n    response += `👥 **Likely Decision Makers:**\\n`;\n    contacts.forEach(dm => {\n      response += `• **${dm.name}** - ${dm.title}\\n`;\n      response += `  📧 ${dm.email} | 📞 ${dm.phone}\\n`;\n      response += `  Authority: ${dm.authority} | Priority: ${dm.priority}\\n`;\n      response += `  Notes: ${dm.notes}\\n\\n`;\n    });\n  }\n  \n  // Value Proposition Section\n  if (focus === 'value_prop' || focus === 'complete') {\n    response += `💡 **Industry-Specific Value Proposition:**\\n\\n`;\n    \n    response += `**Current Industry Challenges:**\\n`;\n    valueProp.challenges.forEach(challenge => {\n      response += `• ${challenge}\\n`;\n    });\n    \n    response += `\\n**GSA Schedule Benefits for ${industry.industry}:**\\n`;\n    valueProp.benefits.forEach(benefit => {\n      response += `• ${benefit}\\n`;\n    });\n    \n    response += `\\n**Specific Federal Opportunities:**\\n`;\n    valueProp.opportunities.forEach(opp => {\n      response += `• ${opp}\\n`;\n    });\n    \n    response += `\\n**🎯 Call Strategy:**\\n`;\n    response += `**Opening Questions:**\\n`;\n    valueProp.questions.forEach(q => {\n      response += `• \"${q}\"\\n`;\n    });\n    \n    response += `\\n**Closing Points:**\\n`;\n    valueProp.closingPoints.forEach(point => {\n      response += `• ${point}\\n`;\n    });\n  }\n  \n  // Footer\n  const totalTime = Date.now() - (input.timestamp ? new Date(input.timestamp).getTime() : startTime);\n  response += `\\n---\\n📊 **Research Status**: Real business analysis completed\\n`;\n  response += `⏱️ **Total Processing Time**: ${totalTime}ms\\n`;\n  response += `🎯 **Next Step**: Schedule consultation with GSA specialist\\n`;\n  response += `💡 **Note**: Contact details are estimated - verify during outreach`;\n  \n  const result = {\n    response: response,\n    metadata: {\n      company: companyName,\n      industry: industry.industry,\n      primarySchedule: gsaSchedules.primaryMatch,\n      contactCount: contacts.length,\n      focus: focus,\n      processingTime: totalTime,\n      timestamp: new Date().toISOString()\n    },\n    formatTime: Date.now() - startTime\n  };\n  \n  console.log('[GSA_FORMAT] Response formatted successfully, length:', response.length);\n  return result;\n  \n} catch (error) {\n  console.error('[GSA_FORMAT] Error:', error.message);\n  const currentTime = new Date().toLocaleTimeString('en-US', { timeZone: 'America/New_York' });\n  \n  return {\n    response: `🚨 **Response Formatting Error**\\n\\nError formatting GSA research response: ${error.message}\\n\\n**Time**: ${currentTime}\\n**Contact**: System administrator`,\n    error: true,\n    timestamp: new Date().toISOString(),\n    errorMessage: error.message\n  };\n}"
      },
      "id": "response-formatter",
      "name": "7. Response Formatter",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1500, 200]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {}
      },
      "id": "output-webhook",
      "name": "GSA Research Output",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1700, 200]
    }
  ],
  "connections": {
    "GSA Research Input": {
      "main": [[{"node": "1. Input Processor", "type": "main", "index": 0}]]
    },
    "1. Input Processor": {
      "main": [[{"node": "2. Company Extractor", "type": "main", "index": 0}]]
    },
    "2. Company Extractor": {
      "main": [[{"node": "3. Industry Analyzer", "type": "main", "index": 0}]]
    },
    "3. Industry Analyzer": {
      "main": [[{"node": "4. GSA Schedule Matcher", "type": "main", "index": 0}]]
    },
    "4. GSA Schedule Matcher": {
      "main": [[{"node": "5. Contact Generator", "type": "main", "index": 0}]]
    },
    "5. Contact Generator": {
      "main": [[{"node": "6. Value Proposition Generator", "type": "main", "index": 0}]]
    },
    "6. Value Proposition Generator": {
      "main": [[{"node": "7. Response Formatter", "type": "main", "index": 0}]]
    },
    "7. Response Formatter": {
      "main": [[{"node": "GSA Research Output", "type": "main", "index": 0}]]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "gsa-research-sub-v1",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "id": "GSAResearchSubflow",
  "tags": ["gsa", "research", "subflow"]
} 